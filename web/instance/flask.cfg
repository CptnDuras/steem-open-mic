##########################################################
#
# This is a sample flask.cfg for developing the Flask App.
#
##########################################################
import os

# grab the folder of the top-level directory of this project
BASEDIR = os.path.abspath(os.path.dirname(__file__))
TOP_LEVEL_DIR = os.path.abspath(os.curdir)

# Update later by using a random number generator and moving
# the actual key outside of the source code under version control
SECRET_KEY = os.environ['FLASK_SECRET_KEY']
WTF_CSRF_ENABLED = True
DEBUG = True

# SQLAlchemy
SQLALCHEMY_DATABASE_URI = 'postgresql://' + os.environ['POSTGRES_USER'] + ':' + os.environ['POSTGRES_PASSWORD'] + '@postgres:5432/' + os.environ['POSTGRES_DB']
SQLALCHEMY_TRACK_MODIFICATIONS = True

# Bcrypt algorithm hashing rounds
BCRYPT_LOG_ROUNDS = 15

# Email settings
MAIL_SERVER = 'smtp'
MAIL_PORT = 1025
MAIL_USE_TLS = False
MAIL_USE_SSL = False
MAIL_USERNAME = 'support@localhost'
MAIL_PASSWORD = 'support'
MAIL_DEFAULT_SENDER = 'support@localhost'

# Uploads
UPLOADS_DEFAULT_DEST = TOP_LEVEL_DIR + '/project/static/img/'
#UPLOADS_DEFAULT_URL = 'http://localhost:5000/static/img/'

UPLOADED_IMAGES_DEST = TOP_LEVEL_DIR + '/project/static/img/'
#UPLOADED_IMAGES_URL = 'http://localhost:5000/static/img/'

# App specifics
STEEM_NODES = [os.environ['PRIMARY_STEEM_RPC_NODE'], os.environ['SECONDARY_STEEM_RPC_NODE']]
YOUTUBE_API_KEY = os.environ['YOUTUBE_API_KEY']
RECREATE_DATABASE = True if os.environ['RECREATE_DATABASE'].lower() == 'true' else False
DEBUGGING_KEY = os.environ['DEBUGGING_KEY']
